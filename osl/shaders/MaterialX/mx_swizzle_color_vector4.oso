OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -q -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -o E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_swizzle_color_vector4.oso
shader mx_swizzle_color_vector4	%meta{string,help,"Perform an arbitrary permutation of the channels of the input stream"} 
param	color	in	0 0 0		%read{0,4} %write{2147483647,-1}
param	string	channels	"rgb"		%read{7,11} %write{2147483647,-1}
oparam	struct vector4	out			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector4"} %structfields{x,y,z,w} %structfieldtypes{"ffff"} %structnfields{4}
oparam	float	out.x	0		%read{2147483647,-1} %write{64,64} %mystruct{out} %mystructfield{0}
oparam	float	out.y	0		%read{2147483647,-1} %write{65,65} %mystruct{out} %mystructfield{1}
oparam	float	out.z	0		%read{2147483647,-1} %write{66,66} %mystruct{out} %mystructfield{2}
oparam	float	out.w	0		%read{2147483647,-1} %write{67,67} %mystruct{out} %mystructfield{3}
local	float	___567_out.x	%read{57,64} %write{56,57} %mystruct{___567_out} %mystructfield{0}
local	float	___567_out.y	%read{59,65} %write{58,59} %mystruct{___567_out} %mystructfield{1}
local	float	___567_out.z	%read{61,66} %write{60,61} %mystruct{___567_out} %mystructfield{2}
local	float	___567_out.w	%read{63,67} %write{62,63} %mystruct{___567_out} %mystructfield{3}
local	float[4]	___567_outF	%read{56,62} %write{10,55}
local	int	___567_c_len	%read{10,55} %write{7,7}
local	int	___568_i	%read{10,55} %write{9,55}
local	string	___569_ch	%read{10,55} %write{10,55}
local	float[4]	inF	%read{10,55} %write{1,5}
const	int	$const1	0		%read{0,56} %write{2147483647,-1}
temp	float	$tmp1	%read{1,1} %write{0,0}
const	int	$const2	1		%read{2,58} %write{2147483647,-1}
temp	float	$tmp2	%read{3,3} %write{2,2}
const	int	$const3	2		%read{4,60} %write{2147483647,-1}
temp	float	$tmp3	%read{5,5} %write{4,4}
const	string	$const4	"swizzle_vector4"		%read{6,6} %write{2147483647,-1}
temp	int	$tmp4	%read{8,55} %write{9,55}
const	string	$const5	"r"		%read{12,12} %write{2147483647,-1}
temp	int	$tmp5	%read{10,55} %write{10,55}
temp	int	$tmp6	%read{10,55} %write{10,55}
const	string	$const6	"x"		%read{15,15} %write{2147483647,-1}
temp	int	$tmp7	%read{10,55} %write{10,55}
temp	int	$tmp8	%read{10,55} %write{10,55}
temp	float	$tmp9	%read{10,55} %write{10,55}
const	string	$const7	"g"		%read{21,21} %write{2147483647,-1}
temp	int	$tmp10	%read{10,55} %write{10,55}
temp	int	$tmp11	%read{10,55} %write{10,55}
const	string	$const8	"y"		%read{24,24} %write{2147483647,-1}
temp	int	$tmp12	%read{10,55} %write{10,55}
temp	int	$tmp13	%read{10,55} %write{10,55}
temp	float	$tmp14	%read{10,55} %write{10,55}
const	string	$const9	"b"		%read{30,30} %write{2147483647,-1}
temp	int	$tmp15	%read{10,55} %write{10,55}
temp	int	$tmp16	%read{10,55} %write{10,55}
const	string	$const10	"z"		%read{33,33} %write{2147483647,-1}
temp	int	$tmp17	%read{10,55} %write{10,55}
temp	int	$tmp18	%read{10,55} %write{10,55}
temp	float	$tmp19	%read{10,55} %write{10,55}
const	string	$const11	"a"		%read{39,39} %write{2147483647,-1}
temp	int	$tmp20	%read{10,55} %write{10,55}
temp	int	$tmp21	%read{10,55} %write{10,55}
const	string	$const12	"w"		%read{42,42} %write{2147483647,-1}
temp	int	$tmp22	%read{10,55} %write{10,55}
temp	int	$tmp23	%read{10,55} %write{10,55}
const	int	$const13	3		%read{46,62} %write{2147483647,-1}
temp	float	$tmp24	%read{10,55} %write{10,55}
const	string	$const14	"1"		%read{48,48} %write{2147483647,-1}
temp	int	$tmp25	%read{10,55} %write{10,55}
temp	float	$tmp26	%read{10,55} %write{10,55}
temp	float	$tmp27	%read{10,55} %write{10,55}
temp	int	$tmp28	%read{2147483647,-1} %write{10,55}
code ___main___
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_swizzle_color_vector4.osl:20
#     inF[0] = in[0];
	compref		$tmp1 in $const1 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_swizzle_color_vector4.osl"} %line{20} %argrw{"wrr"}
	aassign		inF $const1 $tmp1 	%argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_swizzle_color_vector4.osl:21
#     inF[1] = in[1];
	compref		$tmp2 in $const2 	%line{21} %argrw{"wrr"}
	aassign		inF $const2 $tmp2 	%argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_swizzle_color_vector4.osl:22
#     inF[2] = in[2];
	compref		$tmp3 in $const3 	%line{22} %argrw{"wrr"}
	aassign		inF $const3 $tmp3 	%argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_swizzle_color_vector4.osl:24
#     out = swizzle_vector4(inF, channels);
	functioncall	$const4 68 	%line{24} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:590
#     int c_len = strlen(channels);
	strlen		___567_c_len channels 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{590} %argrw{"wr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:592
#     for (int i=0; i<c_len; i++) {
	for		$tmp4 10 11 54 56 	%line{592} %argrw{"r"}
	assign		___568_i $const1 	%argrw{"wr"}
	lt		$tmp4 ___568_i ___567_c_len 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:593
#         string ch = substr(channels, i, 1);
	substr		___569_ch channels ___568_i $const2 	%line{593} %argrw{"wrrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:594
#         if (ch == "r" || ch == "x")
	eq		$tmp5 ___569_ch $const5 	%line{594} %argrw{"wrr"}
	neq		$tmp6 $tmp5 $const1 	%argrw{"wrr"}
	if		$tmp6 15 18 	%argrw{"r"}
	eq		$tmp7 ___569_ch $const6 	%argrw{"wrr"}
	neq		$tmp8 $tmp7 $const1 	%argrw{"wrr"}
	assign		$tmp6 $tmp8 	%argrw{"wr"}
	if		$tmp6 21 54 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:595
#             outF[i] = in[0];
	aref		$tmp9 inF $const1 	%line{595} %argrw{"wrr"}
	aassign		___567_outF ___568_i $tmp9 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:596
#         else if (ch == "g" || ch == "y")
	eq		$tmp10 ___569_ch $const7 	%line{596} %argrw{"wrr"}
	neq		$tmp11 $tmp10 $const1 	%argrw{"wrr"}
	if		$tmp11 24 27 	%argrw{"r"}
	eq		$tmp12 ___569_ch $const8 	%argrw{"wrr"}
	neq		$tmp13 $tmp12 $const1 	%argrw{"wrr"}
	assign		$tmp11 $tmp13 	%argrw{"wr"}
	if		$tmp11 30 54 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:597
#             outF[i] = in[1];
	aref		$tmp14 inF $const2 	%line{597} %argrw{"wrr"}
	aassign		___567_outF ___568_i $tmp14 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:598
#         else if (ch == "b" || ch == "z")
	eq		$tmp15 ___569_ch $const9 	%line{598} %argrw{"wrr"}
	neq		$tmp16 $tmp15 $const1 	%argrw{"wrr"}
	if		$tmp16 33 36 	%argrw{"r"}
	eq		$tmp17 ___569_ch $const10 	%argrw{"wrr"}
	neq		$tmp18 $tmp17 $const1 	%argrw{"wrr"}
	assign		$tmp16 $tmp18 	%argrw{"wr"}
	if		$tmp16 39 54 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:599
#             outF[i] = in[2];
	aref		$tmp19 inF $const3 	%line{599} %argrw{"wrr"}
	aassign		___567_outF ___568_i $tmp19 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:600
#         else if (ch == "a" || ch == "w")
	eq		$tmp20 ___569_ch $const11 	%line{600} %argrw{"wrr"}
	neq		$tmp21 $tmp20 $const1 	%argrw{"wrr"}
	if		$tmp21 42 45 	%argrw{"r"}
	eq		$tmp22 ___569_ch $const12 	%argrw{"wrr"}
	neq		$tmp23 $tmp22 $const1 	%argrw{"wrr"}
	assign		$tmp21 $tmp23 	%argrw{"wr"}
	if		$tmp21 48 54 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:601
#             outF[i] = in[3];
	aref		$tmp24 inF $const13 	%line{601} %argrw{"wrr"}
	aassign		___567_outF ___568_i $tmp24 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:602
#         else if(ch == "1")
	eq		$tmp25 ___569_ch $const14 	%line{602} %argrw{"wrr"}
	if		$tmp25 52 54 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:603
#             outF[i] = 1;
	assign		$tmp26 $const2 	%line{603} %argrw{"wr"}
	aassign		___567_outF ___568_i $tmp26 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:605
#             outF[i] = 0;
	assign		$tmp27 $const1 	%line{605} %argrw{"wr"}
	aassign		___567_outF ___568_i $tmp27 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:592
#     for (int i=0; i<c_len; i++) {
	assign		$tmp28 ___568_i 	%line{592} %argrw{"wr"}
	add		___568_i ___568_i $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:607
#     out.x = outF[0];
	aref		___567_out.x ___567_outF $const1 	%line{607} %argrw{"wrr"}
	assign		___567_out.x ___567_out.x 	%argrw{"wr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:608
#     out.y = outF[1];
	aref		___567_out.y ___567_outF $const2 	%line{608} %argrw{"wrr"}
	assign		___567_out.y ___567_out.y 	%argrw{"wr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:609
#     out.z = outF[2];
	aref		___567_out.z ___567_outF $const3 	%line{609} %argrw{"wrr"}
	assign		___567_out.z ___567_out.z 	%argrw{"wr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:610
#     out.w = outF[3];
	aref		___567_out.w ___567_outF $const13 	%line{610} %argrw{"wrr"}
	assign		___567_out.w ___567_out.w 	%argrw{"wr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:611
#     return out;
	assign		out.x ___567_out.x 	%line{611} %argrw{"wr"}
	assign		out.y ___567_out.y 	%argrw{"wr"}
	assign		out.z ___567_out.z 	%argrw{"wr"}
	assign		out.w ___567_out.w 	%argrw{"wr"}
	end
