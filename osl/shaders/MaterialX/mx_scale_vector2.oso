OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -q -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -o E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_scale_vector2.oso
shader mx_scale_vector2	%meta{string,help,"Vector2 Scales a vector2 or vector3 value about a center point in 2D or 3D pattern space."} 
param	struct vector2	in			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	in.x	0		%read{1,1} %write{2147483647,-1} %mystruct{in} %mystructfield{0}
param	float	in.y	0		%read{2,2} %write{2147483647,-1} %mystruct{in} %mystructfield{1}
param	struct vector2	amount			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	amount.x	1		%read{4,4} %write{2147483647,-1} %mystruct{amount} %mystructfield{0}
param	float	amount.y	1		%read{5,5} %write{2147483647,-1} %mystruct{amount} %mystructfield{1}
param	struct vector2	center			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
param	float	center.x	0.5		%read{1,7} %write{2147483647,-1} %mystruct{center} %mystructfield{0}
param	float	center.y	0.5		%read{2,8} %write{2147483647,-1} %mystruct{center} %mystructfield{1}
oparam	struct vector2	out			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector2"} %structfields{x,y} %structfieldtypes{"ff"} %structnfields{2}
oparam	float	out.x	0		%read{2147483647,-1} %write{7,7} %mystruct{out} %mystructfield{0}
oparam	float	out.y	0		%read{2147483647,-1} %write{8,8} %mystruct{out} %mystructfield{1}
temp	float	$tmp1.x	%read{7,7} %write{4,4}
temp	float	$tmp1.y	%read{8,8} %write{5,5}
temp	float	$tmp2.x	%read{4,4} %write{1,1}
temp	float	$tmp2.y	%read{5,5} %write{2,2}
const	string	$const1	"__operator__sub__"		%read{0,0} %write{2147483647,-1}
const	string	$const2	"__operator__div__"		%read{3,3} %write{2147483647,-1}
const	string	$const3	"__operator__add__"		%read{6,6} %write{2147483647,-1}
code ___main___
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_scale_vector2.osl:20
# 
	functioncall	$const1 3 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_scale_vector2.osl"} %line{20} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\vector2.h:53
#     return vector2(a.x - b.x, a.y - b.y);
	sub		$tmp2.x in.x center.x 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\vector2.h"} %line{53} %argrw{"wrr"}
	sub		$tmp2.y in.y center.y 	%argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_scale_vector2.osl:20
# 
	functioncall	$const2 6 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_scale_vector2.osl"} %line{20} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\vector2.h:103
#     return vector2(a.x / b.x, a.y / b.y);
	div		$tmp1.x $tmp2.x amount.x 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\vector2.h"} %line{103} %argrw{"wrr"}
	div		$tmp1.y $tmp2.y amount.y 	%argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_scale_vector2.osl:20
# 
	functioncall	$const3 9 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_scale_vector2.osl"} %line{20} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\vector2.h:28
#     return vector2(a.x + b.x, a.y + b.y);
	add		out.x $tmp1.x center.x 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\vector2.h"} %line{28} %argrw{"wrr"}
	add		out.y $tmp1.y center.y 	%argrw{"wrr"}
	end
