OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -q -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -o E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_fractal3d_float.oso
shader mx_fractal3d_float	%meta{string,help,"3D fractal noise"} 
param	point	position	0 0 0		%meta{string,help,"input coordinate position (default: object space P)"} %meta{int,lockgeom,0}  %read{5,5} %write{1,1} %derivs %initexpr
param	float	amplitude	1		%meta{string,help,"center-to-peak amplitude of the noise"}  %read{16,16} %write{2147483647,-1}
param	int	octaves	3		%meta{string,help,"number of summed octaves"}  %read{8,8} %write{2147483647,-1}
param	float	lacunarity	2		%meta{string,help,"exponential scale between successive octaves"}  %read{13,13} %write{2147483647,-1} %derivs
param	float	diminish	0.5		%meta{string,help,"rate at which amplitude is diminished per octave"}  %read{12,12} %write{2147483647,-1}
param	string	noisetype	"snoise"		%meta{string,help,"type of noise"}  %read{9,9} %write{2147483647,-1}
oparam	float	out	0		%read{2147483647,-1} %write{16,16}
global	point	P	%read{1,1} %write{2147483647,-1} %derivs
local	float	___539_out	%read{8,15} %write{3,14}
local	float	___539_amp	%read{8,14} %write{4,14}
local	point	___539_p	%read{8,14} %write{5,14} %derivs
local	int	___540_i	%read{8,14} %write{7,14}
local	float	f	%read{16,16} %write{15,15}
const	string	$const1	"object"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
const	string	$const4	"fBm"		%read{2,2} %write{2147483647,-1}
const	int	$const5	0		%read{3,7} %write{2147483647,-1}
const	float	$const6	1		%read{4,4} %write{2147483647,-1}
temp	int	$tmp1	%read{6,14} %write{7,14}
temp	float	$tmp2	%read{8,14} %write{8,14}
temp	float	$tmp3	%read{8,14} %write{8,14}
const	int	$const7	1		%read{14,14} %write{2147483647,-1}
code position
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_fractal3d_float.osl:12
#     point position = transform ("object", P)
	functioncall	$const2 2 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_fractal3d_float.osl"} %line{12} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:267
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	position $const3 $const1 P 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{267} %argrw{"wrrr"}
code ___main___
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_fractal3d_float.osl:34
#     float f = fBm(position, octaves, lacunarity, diminish, noisetype);
	functioncall	$const4 16 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_fractal3d_float.osl"} %line{34} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:364
#     float out = 0;
	assign		___539_out $const5 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{364} %argrw{"wr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:365
#     float amp = 1.0;
	assign		___539_amp $const6 	%line{365} %argrw{"wr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:366
#     point p = position;
	assign		___539_p position 	%line{366} %argrw{"wr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:368
#     for (int i = 0;  i < octaves;  i += 1) {
	for		$tmp1 8 9 14 15 	%line{368} %argrw{"r"}
	assign		___540_i $const5 	%argrw{"wr"}
	lt		$tmp1 ___540_i octaves 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:369
#         out += amp * noise(noisetype, p);
	noise		$tmp2 noisetype ___539_p 	%line{369} %argrw{"wrr"} %argderivs{2}
	mul		$tmp3 ___539_amp $tmp2 	%argrw{"wrr"}
	add		___539_out ___539_out $tmp3 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:370
#         amp *= diminish;
	mul		___539_amp ___539_amp diminish 	%line{370} %argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:371
#         p *= lacunarity;
	mul		___539_p ___539_p lacunarity 	%line{371} %argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:368
#     for (int i = 0;  i < octaves;  i += 1) {
	add		___540_i ___540_i $const7 	%line{368} %argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:373
#     return out;
	assign		f ___539_out 	%line{373} %argrw{"wr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_fractal3d_float.osl:35
#     out = f * amplitude;
	mul		out f amplitude 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_fractal3d_float.osl"} %line{35} %argrw{"wrr"}
	end
