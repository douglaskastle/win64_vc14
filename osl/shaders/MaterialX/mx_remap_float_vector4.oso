OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -q -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -o E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_vector4.oso
shader mx_remap_float_vector4	%meta{string,help,"Vector4 Increase or decrease remap of a float/color value using a linear slope multiplier."} 
param	struct vector4	in			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector4"} %structfields{x,y,z,w} %structfieldtypes{"ffff"} %structnfields{4}
param	float	in.x	0		%read{2,2} %write{2147483647,-1} %mystruct{in} %mystructfield{0}
param	float	in.y	0		%read{14,14} %write{2147483647,-1} %mystruct{in} %mystructfield{1}
param	float	in.z	0		%read{26,26} %write{2147483647,-1} %mystruct{in} %mystructfield{2}
param	float	in.w	0		%read{38,38} %write{2147483647,-1} %mystruct{in} %mystructfield{3}
param	float	inlow	0		%read{2,39} %write{2147483647,-1}
param	float	inhigh	1		%read{3,39} %write{2147483647,-1}
param	float	gamma	1		%read{53,68} %write{2147483647,-1}
param	float	outlow	0		%read{80,118} %write{2147483647,-1}
param	float	outhigh	1		%read{80,116} %write{2147483647,-1}
param	int	doclamp	0		%read{75,111} %write{2147483647,-1}
oparam	struct vector4	out			%read{2147483647,-1} %write{2147483647,-1} %struct{"vector4"} %structfields{x,y,z,w} %structfieldtypes{"ffff"} %structnfields{4}
oparam	float	out.x	0		%read{51,72} %write{12,82} %mystruct{out} %mystructfield{0}
oparam	float	out.y	0		%read{56,84} %write{24,94} %mystruct{out} %mystructfield{1}
oparam	float	out.z	0		%read{61,96} %write{36,106} %mystruct{out} %mystructfield{2}
oparam	float	out.w	0		%read{66,108} %write{48,118} %mystruct{out} %mystructfield{3}
local	float	___487_x	%read{8,117} %write{4,115}
const	int	$const1	0		%read{5,41} %write{2147483647,-1}
const	float	$const2	0		%read{9,115} %write{2147483647,-1}
const	int	$const3	1		%read{5,111} %write{2147483647,-1}
const	float	$const4	1		%read{8,114} %write{2147483647,-1}
const	string	$const5	"remap"		%read{0,107} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{2,2}
temp	float	$tmp2	%read{4,4} %write{3,3}
temp	int	$tmp3	%read{6,6} %write{5,5}
const	string	$const6	"clamp"		%read{7,113} %write{2147483647,-1}
temp	float	$tmp4	%read{9,9} %write{8,8}
temp	float	$tmp5	%read{11,11} %write{10,10}
temp	float	$tmp6	%read{12,12} %write{11,11}
temp	float	$tmp7	%read{16,16} %write{14,14}
temp	float	$tmp8	%read{16,16} %write{15,15}
temp	int	$tmp9	%read{18,18} %write{17,17}
temp	float	$tmp10	%read{21,21} %write{20,20}
temp	float	$tmp11	%read{23,23} %write{22,22}
temp	float	$tmp12	%read{24,24} %write{23,23}
temp	float	$tmp13	%read{28,28} %write{26,26}
temp	float	$tmp14	%read{28,28} %write{27,27}
temp	int	$tmp15	%read{30,30} %write{29,29}
temp	float	$tmp16	%read{33,33} %write{32,32}
temp	float	$tmp17	%read{35,35} %write{34,34}
temp	float	$tmp18	%read{36,36} %write{35,35}
temp	float	$tmp19	%read{40,40} %write{38,38}
temp	float	$tmp20	%read{40,40} %write{39,39}
temp	int	$tmp21	%read{42,42} %write{41,41}
temp	float	$tmp22	%read{45,45} %write{44,44}
temp	float	$tmp23	%read{47,47} %write{46,46}
temp	float	$tmp24	%read{48,48} %write{47,47}
const	string	$const7	"fgamma"		%read{49,65} %write{2147483647,-1}
temp	float	$tmp25	%read{54,54} %write{51,51}
temp	float	$tmp26	%read{54,54} %write{53,53}
temp	float	$tmp27	%read{53,53} %write{52,52}
temp	float	$tmp28	%read{59,59} %write{56,56}
temp	float	$tmp29	%read{59,59} %write{58,58}
temp	float	$tmp30	%read{58,58} %write{57,57}
temp	float	$tmp31	%read{64,64} %write{61,61}
temp	float	$tmp32	%read{64,64} %write{63,63}
temp	float	$tmp33	%read{63,63} %write{62,62}
temp	float	$tmp34	%read{69,69} %write{66,66}
temp	float	$tmp35	%read{69,69} %write{68,68}
temp	float	$tmp36	%read{68,68} %write{67,67}
temp	float	$tmp37	%read{74,74} %write{72,72}
temp	float	$tmp38	%read{74,74} %write{73,73}
temp	int	$tmp39	%read{76,76} %write{75,75}
temp	float	$tmp40	%read{79,79} %write{78,78}
temp	float	$tmp41	%read{81,81} %write{80,80}
temp	float	$tmp42	%read{82,82} %write{81,81}
temp	float	$tmp43	%read{86,86} %write{84,84}
temp	float	$tmp44	%read{86,86} %write{85,85}
temp	int	$tmp45	%read{88,88} %write{87,87}
temp	float	$tmp46	%read{91,91} %write{90,90}
temp	float	$tmp47	%read{93,93} %write{92,92}
temp	float	$tmp48	%read{94,94} %write{93,93}
temp	float	$tmp49	%read{98,98} %write{96,96}
temp	float	$tmp50	%read{98,98} %write{97,97}
temp	int	$tmp51	%read{100,100} %write{99,99}
temp	float	$tmp52	%read{103,103} %write{102,102}
temp	float	$tmp53	%read{105,105} %write{104,104}
temp	float	$tmp54	%read{106,106} %write{105,105}
temp	float	$tmp55	%read{110,110} %write{108,108}
temp	float	$tmp56	%read{110,110} %write{109,109}
temp	int	$tmp57	%read{112,112} %write{111,111}
temp	float	$tmp58	%read{115,115} %write{114,114}
temp	float	$tmp59	%read{117,117} %write{116,116}
temp	float	$tmp60	%read{118,118} %write{117,117}
code ___main___
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_vector4.osl:23
#     out = remap(in, inlow, inhigh, 0, 1, 0);
	functioncall	$const5 49 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_vector4.osl"} %line{23} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:99
#     return vector4 (remap(in.x, inLow, inHigh, outLow, outHigh, doClamp),
	functioncall	$const5 13 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{99} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp1 in.x inlow 	%line{26} %argrw{"wrr"}
	sub		$tmp2 inhigh inlow 	%argrw{"wrr"}
	div		___487_x $tmp1 $tmp2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp3 $const1 $const3 	%line{27} %argrw{"wrr"}
	if		$tmp3 10 10 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 10 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp4 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp4 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp5 $const4 $const2 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp6 $tmp5 ___487_x 	%argrw{"wrr"}
	add		out.x $const2 $tmp6 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:100
#                     remap(in.y, inLow, inHigh, outLow, outHigh, doClamp),
	functioncall	$const5 25 	%line{100} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp7 in.y inlow 	%line{26} %argrw{"wrr"}
	sub		$tmp8 inhigh inlow 	%argrw{"wrr"}
	div		___487_x $tmp7 $tmp8 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp9 $const1 $const3 	%line{27} %argrw{"wrr"}
	if		$tmp9 22 22 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 22 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp10 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp10 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp11 $const4 $const2 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp12 $tmp11 ___487_x 	%argrw{"wrr"}
	add		out.y $const2 $tmp12 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:101
#                     remap(in.z, inLow, inHigh, outLow, outHigh, doClamp),
	functioncall	$const5 37 	%line{101} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp13 in.z inlow 	%line{26} %argrw{"wrr"}
	sub		$tmp14 inhigh inlow 	%argrw{"wrr"}
	div		___487_x $tmp13 $tmp14 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp15 $const1 $const3 	%line{27} %argrw{"wrr"}
	if		$tmp15 34 34 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 34 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp16 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp16 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp17 $const4 $const2 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp18 $tmp17 ___487_x 	%argrw{"wrr"}
	add		out.z $const2 $tmp18 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:102
#                     remap(in.w, inLow, inHigh, outLow, outHigh, doClamp));
	functioncall	$const5 49 	%line{102} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp19 in.w inlow 	%line{26} %argrw{"wrr"}
	sub		$tmp20 inhigh inlow 	%argrw{"wrr"}
	div		___487_x $tmp19 $tmp20 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp21 $const1 $const3 	%line{27} %argrw{"wrr"}
	if		$tmp21 46 46 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 46 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp22 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp22 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp23 $const4 $const2 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp24 $tmp23 ___487_x 	%argrw{"wrr"}
	add		out.w $const2 $tmp24 	%argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_vector4.osl:26
#     out = fgamma(out, gamma);
	functioncall	$const7 70 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_vector4.osl"} %line{26} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:162
#     return vector4 (fgamma(in.x, g),
	functioncall	$const7 55 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{162} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:109
#     return sign(in) * pow(abs(in), g);
	sign		$tmp25 out.x 	%line{109} %argrw{"wr"}
	abs		$tmp27 out.x 	%argrw{"wr"}
	pow		$tmp26 $tmp27 gamma 	%argrw{"wrr"}
	mul		out.x $tmp25 $tmp26 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:163
#                     fgamma(in.y, g),
	functioncall	$const7 60 	%line{163} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:109
#     return sign(in) * pow(abs(in), g);
	sign		$tmp28 out.y 	%line{109} %argrw{"wr"}
	abs		$tmp30 out.y 	%argrw{"wr"}
	pow		$tmp29 $tmp30 gamma 	%argrw{"wrr"}
	mul		out.y $tmp28 $tmp29 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:164
#                     fgamma(in.z, g),
	functioncall	$const7 65 	%line{164} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:109
#     return sign(in) * pow(abs(in), g);
	sign		$tmp31 out.z 	%line{109} %argrw{"wr"}
	abs		$tmp33 out.z 	%argrw{"wr"}
	pow		$tmp32 $tmp33 gamma 	%argrw{"wrr"}
	mul		out.z $tmp31 $tmp32 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:165
#                     fgamma(in.w, g));
	functioncall	$const7 70 	%line{165} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:109
#     return sign(in) * pow(abs(in), g);
	sign		$tmp34 out.w 	%line{109} %argrw{"wr"}
	abs		$tmp36 out.w 	%argrw{"wr"}
	pow		$tmp35 $tmp36 gamma 	%argrw{"wrr"}
	mul		out.w $tmp34 $tmp35 	%argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_vector4.osl:29
#     out = remap(out, 0, 1, outlow, outhigh, doclamp); 
	functioncall	$const5 119 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_vector4.osl"} %line{29} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:99
#     return vector4 (remap(in.x, inLow, inHigh, outLow, outHigh, doClamp),
	functioncall	$const5 83 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{99} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp37 out.x $const2 	%line{26} %argrw{"wrr"}
	sub		$tmp38 $const4 $const2 	%argrw{"wrr"}
	div		___487_x $tmp37 $tmp38 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp39 doclamp $const3 	%line{27} %argrw{"wrr"}
	if		$tmp39 80 80 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 80 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp40 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp40 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp41 outhigh outlow 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp42 $tmp41 ___487_x 	%argrw{"wrr"}
	add		out.x outlow $tmp42 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:100
#                     remap(in.y, inLow, inHigh, outLow, outHigh, doClamp),
	functioncall	$const5 95 	%line{100} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp43 out.y $const2 	%line{26} %argrw{"wrr"}
	sub		$tmp44 $const4 $const2 	%argrw{"wrr"}
	div		___487_x $tmp43 $tmp44 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp45 doclamp $const3 	%line{27} %argrw{"wrr"}
	if		$tmp45 92 92 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 92 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp46 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp46 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp47 outhigh outlow 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp48 $tmp47 ___487_x 	%argrw{"wrr"}
	add		out.y outlow $tmp48 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:101
#                     remap(in.z, inLow, inHigh, outLow, outHigh, doClamp),
	functioncall	$const5 107 	%line{101} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp49 out.z $const2 	%line{26} %argrw{"wrr"}
	sub		$tmp50 $const4 $const2 	%argrw{"wrr"}
	div		___487_x $tmp49 $tmp50 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp51 doclamp $const3 	%line{27} %argrw{"wrr"}
	if		$tmp51 104 104 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 104 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp52 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp52 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp53 outhigh outlow 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp54 $tmp53 ___487_x 	%argrw{"wrr"}
	add		out.z outlow $tmp54 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:102
#                     remap(in.w, inLow, inHigh, outLow, outHigh, doClamp));
	functioncall	$const5 119 	%line{102} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp55 out.w $const2 	%line{26} %argrw{"wrr"}
	sub		$tmp56 $const4 $const2 	%argrw{"wrr"}
	div		___487_x $tmp55 $tmp56 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp57 doclamp $const3 	%line{27} %argrw{"wrr"}
	if		$tmp57 116 116 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 116 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp58 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp58 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp59 outhigh outlow 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp60 $tmp59 ___487_x 	%argrw{"wrr"}
	add		out.w outlow $tmp60 	%argrw{"wrr"}
	end
