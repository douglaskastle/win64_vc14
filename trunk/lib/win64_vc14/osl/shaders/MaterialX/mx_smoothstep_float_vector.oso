OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -q -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -o E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_smoothstep_float_vector.oso
shader mx_smoothstep_float_vector	%meta{string,help,"outputs a smooth (hermite-interpolated) remapping of input values from low-high to output 0-1."} 
param	vector	in	0 0 0		%meta{string,help,"input"}  %read{5,13} %write{2147483647,-1}
param	float	low	0		%meta{string,help,"input value of this or lower will return 0"}  %read{0,0} %write{2147483647,-1}
param	float	high	1		%meta{string,help," an input value of this or higher will result in an output value of 1"}  %read{1,1} %write{2147483647,-1}
oparam	vector	out	0 0 0		%read{2147483647,-1} %write{15,15}
temp	vector	$tmp1	%read{3,11} %write{0,0}
temp	vector	$tmp2	%read{4,12} %write{1,1}
const	string	$const1	"smoothstep"		%read{2,2} %write{2147483647,-1}
temp	float	$tmp3	%read{15,15} %write{6,6}
const	int	$const2	0		%read{3,5} %write{2147483647,-1}
temp	float	$tmp4	%read{6,6} %write{3,3}
temp	float	$tmp5	%read{6,6} %write{4,4}
temp	float	$tmp6	%read{6,6} %write{5,5}
temp	float	$tmp7	%read{15,15} %write{10,10}
const	int	$const3	1		%read{7,9} %write{2147483647,-1}
temp	float	$tmp8	%read{10,10} %write{7,7}
temp	float	$tmp9	%read{10,10} %write{8,8}
temp	float	$tmp10	%read{10,10} %write{9,9}
temp	float	$tmp11	%read{15,15} %write{14,14}
const	int	$const4	2		%read{11,13} %write{2147483647,-1}
temp	float	$tmp12	%read{14,14} %write{11,11}
temp	float	$tmp13	%read{14,14} %write{12,12}
temp	float	$tmp14	%read{14,14} %write{13,13}
code ___main___
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_smoothstep_float_vector.osl:21
#     out = smoothstep(low, high, in);
	assign		$tmp1 low 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_smoothstep_float_vector.osl"} %line{21} %argrw{"wr"}
	assign		$tmp2 high 	%argrw{"wr"}
	functioncall	$const1 16 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:331
#     return vector (smoothstep(edge0[0], edge1[0], in[0]),
	compref		$tmp4 $tmp1 $const2 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{331} %argrw{"wrr"}
	compref		$tmp5 $tmp2 $const2 	%argrw{"wrr"}
	compref		$tmp6 in $const2 	%argrw{"wrr"}
	smoothstep	$tmp3 $tmp4 $tmp5 $tmp6 	%argrw{"wrrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:332
#                    smoothstep(edge0[1], edge1[1], in[1]),
	compref		$tmp8 $tmp1 $const3 	%line{332} %argrw{"wrr"}
	compref		$tmp9 $tmp2 $const3 	%argrw{"wrr"}
	compref		$tmp10 in $const3 	%argrw{"wrr"}
	smoothstep	$tmp7 $tmp8 $tmp9 $tmp10 	%argrw{"wrrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:333
#                    smoothstep(edge0[2], edge1[2], in[2]));
	compref		$tmp12 $tmp1 $const4 	%line{333} %argrw{"wrr"}
	compref		$tmp13 $tmp2 $const4 	%argrw{"wrr"}
	compref		$tmp14 in $const4 	%argrw{"wrr"}
	smoothstep	$tmp11 $tmp12 $tmp13 $tmp14 	%argrw{"wrrr"}
	vector		out $tmp3 $tmp7 $tmp11 	%argrw{"wrrr"}
	end
