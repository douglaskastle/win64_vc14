OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -q -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -o E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_smoothstep_float_color4.oso
shader mx_smoothstep_float_color4	%meta{string,help,"outputs a smooth (hermite-interpolated) remapping of input values from low-high to output 0-1."} 
param	struct color4	in			%meta{string,help,"input"}  %read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
param	color	in.rgb	0 0 0		%meta{string,help,"input"}  %read{9,17} %write{2147483647,-1} %mystruct{in} %mystructfield{0}
param	float	in.a	0		%meta{string,help,"input"}  %read{20,20} %write{2147483647,-1} %mystruct{in} %mystructfield{1}
param	float	low	0		%meta{string,help,"input value of this or lower will return 0"}  %read{1,2} %write{2147483647,-1}
param	float	high	1		%meta{string,help," an input value of this or higher will result in an output value of 1"}  %read{3,4} %write{2147483647,-1}
oparam	struct color4	out			%read{2147483647,-1} %write{2147483647,-1} %struct{"color4"} %structfields{rgb,a} %structfieldtypes{"cf"} %structnfields{2}
oparam	color	out.rgb	0 0 0		%read{2147483647,-1} %write{19,19} %mystruct{out} %mystructfield{0}
oparam	float	out.a	0		%read{2147483647,-1} %write{20,20} %mystruct{out} %mystructfield{1}
const	string	$const1	"smoothstep"		%read{0,6} %write{2147483647,-1}
temp	color	$tmp1.rgb	%read{7,15} %write{1,1}
temp	float	$tmp1.a	%read{20,20} %write{2,2}
temp	color	$tmp2.rgb	%read{8,16} %write{3,3}
temp	float	$tmp2.a	%read{20,20} %write{4,4}
temp	float	$tmp3	%read{19,19} %write{10,10}
const	int	$const2	0		%read{7,9} %write{2147483647,-1}
temp	float	$tmp4	%read{10,10} %write{7,7}
temp	float	$tmp5	%read{10,10} %write{8,8}
temp	float	$tmp6	%read{10,10} %write{9,9}
temp	float	$tmp7	%read{19,19} %write{14,14}
const	int	$const3	1		%read{11,13} %write{2147483647,-1}
temp	float	$tmp8	%read{14,14} %write{11,11}
temp	float	$tmp9	%read{14,14} %write{12,12}
temp	float	$tmp10	%read{14,14} %write{13,13}
temp	float	$tmp11	%read{19,19} %write{18,18}
const	int	$const4	2		%read{15,17} %write{2147483647,-1}
temp	float	$tmp12	%read{18,18} %write{15,15}
temp	float	$tmp13	%read{18,18} %write{16,16}
temp	float	$tmp14	%read{18,18} %write{17,17}
code ___main___
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_smoothstep_float_color4.osl:21
#     out = smoothstep(low, high, in);
	functioncall	$const1 21 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_smoothstep_float_color4.osl"} %line{21} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\color4.h:173
#     return smoothstep(color4(color(edge0), edge0), color4(color(edge1), edge1), c);
	assign		$tmp1.rgb low 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\color4.h"} %line{173} %argrw{"wr"}
	assign		$tmp1.a low 	%argrw{"wr"}
	assign		$tmp2.rgb high 	%argrw{"wr"}
	assign		$tmp2.a high 	%argrw{"wr"}
	functioncall	$const1 21 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\color4.h:167
#     return color4(smoothstep(edge0.rgb, edge1.rgb, c.rgb),
	functioncall	$const1 20 	%line{167} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:325
#     return color (smoothstep(edge0[0], edge1[0], in[0]),
	compref		$tmp4 $tmp1.rgb $const2 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{325} %argrw{"wrr"}
	compref		$tmp5 $tmp2.rgb $const2 	%argrw{"wrr"}
	compref		$tmp6 in.rgb $const2 	%argrw{"wrr"}
	smoothstep	$tmp3 $tmp4 $tmp5 $tmp6 	%argrw{"wrrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:326
#                   smoothstep(edge0[1], edge1[1], in[1]),
	compref		$tmp8 $tmp1.rgb $const3 	%line{326} %argrw{"wrr"}
	compref		$tmp9 $tmp2.rgb $const3 	%argrw{"wrr"}
	compref		$tmp10 in.rgb $const3 	%argrw{"wrr"}
	smoothstep	$tmp7 $tmp8 $tmp9 $tmp10 	%argrw{"wrrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:327
#                   smoothstep(edge0[2], edge1[2], in[2]));
	compref		$tmp12 $tmp1.rgb $const4 	%line{327} %argrw{"wrr"}
	compref		$tmp13 $tmp2.rgb $const4 	%argrw{"wrr"}
	compref		$tmp14 in.rgb $const4 	%argrw{"wrr"}
	smoothstep	$tmp11 $tmp12 $tmp13 $tmp14 	%argrw{"wrrr"}
	color		out.rgb $tmp3 $tmp7 $tmp11 	%argrw{"wrrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\color4.h:168
#                   smoothstep(edge0.a, edge1.a, c.a));
	smoothstep	out.a $tmp1.a $tmp2.a in.a 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\color4.h"} %line{168} %argrw{"wrrr"}
	end
