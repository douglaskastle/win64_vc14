OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -q -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -o E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_color2.oso
shader mx_remap_float_color2	%meta{string,help,"Color2 Increase or decrease remap of a float/color value using a linear slope multiplier."} 
param	struct color2	in			%read{2147483647,-1} %write{2147483647,-1} %struct{"color2"} %structfields{r,a} %structfieldtypes{"ff"} %structnfields{2}
param	float	in.r	0		%read{11,11} %write{2147483647,-1} %mystruct{in} %mystructfield{0}
param	float	in.a	0		%read{23,23} %write{2147483647,-1} %mystruct{in} %mystructfield{1}
param	float	inlow	0		%read{1,2} %write{2147483647,-1}
param	float	inhigh	1		%read{3,4} %write{2147483647,-1}
param	float	gamma	1		%read{35,36} %write{2147483647,-1}
param	float	outlow	0		%read{53,54} %write{2147483647,-1}
param	float	outhigh	1		%read{55,56} %write{2147483647,-1}
param	int	doclamp	0		%read{62,74} %write{2147483647,-1}
oparam	struct color2	out			%read{2147483647,-1} %write{2147483647,-1} %struct{"color2"} %structfields{r,a} %structfieldtypes{"ff"} %structnfields{2}
oparam	float	out.r	0		%read{39,59} %write{21,69} %mystruct{out} %mystructfield{0}
oparam	float	out.a	0		%read{44,71} %write{33,81} %mystruct{out} %mystructfield{1}
local	float	___487_x	%read{17,80} %write{13,78}
const	int	$const1	0		%read{14,26} %write{2147483647,-1}
const	float	$const2	0		%read{5,78} %write{2147483647,-1}
const	int	$const3	1		%read{14,74} %write{2147483647,-1}
const	float	$const4	1		%read{7,77} %write{2147483647,-1}
const	string	$const5	"remap"		%read{0,70} %write{2147483647,-1}
temp	float	$tmp1.r	%read{11,12} %write{1,1}
temp	float	$tmp1.a	%read{23,24} %write{2,2}
temp	float	$tmp2.r	%read{12,12} %write{3,3}
temp	float	$tmp2.a	%read{24,24} %write{4,4}
temp	float	$tmp3.r	%read{19,21} %write{5,5}
temp	float	$tmp3.a	%read{31,33} %write{6,6}
temp	float	$tmp4.r	%read{19,19} %write{7,7}
temp	float	$tmp4.a	%read{31,31} %write{8,8}
temp	float	$tmp5	%read{13,13} %write{11,11}
temp	float	$tmp6	%read{13,13} %write{12,12}
temp	int	$tmp7	%read{15,15} %write{14,14}
const	string	$const6	"clamp"		%read{16,76} %write{2147483647,-1}
temp	float	$tmp8	%read{18,18} %write{17,17}
temp	float	$tmp9	%read{20,20} %write{19,19}
temp	float	$tmp10	%read{21,21} %write{20,20}
temp	float	$tmp11	%read{25,25} %write{23,23}
temp	float	$tmp12	%read{25,25} %write{24,24}
temp	int	$tmp13	%read{27,27} %write{26,26}
temp	float	$tmp14	%read{30,30} %write{29,29}
temp	float	$tmp15	%read{32,32} %write{31,31}
temp	float	$tmp16	%read{33,33} %write{32,32}
const	string	$const7	"fgamma"		%read{34,43} %write{2147483647,-1}
temp	float	$tmp17.r	%read{41,41} %write{35,35}
temp	float	$tmp17.a	%read{46,46} %write{36,36}
temp	float	$tmp18	%read{42,42} %write{39,39}
temp	float	$tmp19	%read{42,42} %write{41,41}
temp	float	$tmp20	%read{41,41} %write{40,40}
temp	float	$tmp21	%read{47,47} %write{44,44}
temp	float	$tmp22	%read{47,47} %write{46,46}
temp	float	$tmp23	%read{46,46} %write{45,45}
temp	float	$tmp24.r	%read{59,60} %write{49,49}
temp	float	$tmp24.a	%read{71,72} %write{50,50}
temp	float	$tmp25.r	%read{60,60} %write{51,51}
temp	float	$tmp25.a	%read{72,72} %write{52,52}
temp	float	$tmp26.r	%read{67,69} %write{53,53}
temp	float	$tmp26.a	%read{79,81} %write{54,54}
temp	float	$tmp27.r	%read{67,67} %write{55,55}
temp	float	$tmp27.a	%read{79,79} %write{56,56}
temp	float	$tmp28	%read{61,61} %write{59,59}
temp	float	$tmp29	%read{61,61} %write{60,60}
temp	int	$tmp30	%read{63,63} %write{62,62}
temp	float	$tmp31	%read{66,66} %write{65,65}
temp	float	$tmp32	%read{68,68} %write{67,67}
temp	float	$tmp33	%read{69,69} %write{68,68}
temp	float	$tmp34	%read{73,73} %write{71,71}
temp	float	$tmp35	%read{73,73} %write{72,72}
temp	int	$tmp36	%read{75,75} %write{74,74}
temp	float	$tmp37	%read{78,78} %write{77,77}
temp	float	$tmp38	%read{80,80} %write{79,79}
temp	float	$tmp39	%read{81,81} %write{80,80}
code ___main___
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_color2.osl:23
#     out = remap(in, inlow, inhigh, 0, 1, 0);
	functioncall	$const5 34 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_color2.osl"} %line{23} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:59
#     return remap(c, color2(inLow, inLow), color2(inHigh, inHigh), color2(outLow, outLow), color2(outHigh, outHigh), doClamp);
	assign		$tmp1.r inlow 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{59} %argrw{"wr"}
	assign		$tmp1.a inlow 	%argrw{"wr"}
	assign		$tmp2.r inhigh 	%argrw{"wr"}
	assign		$tmp2.a inhigh 	%argrw{"wr"}
	assign		$tmp3.r $const2 	%argrw{"wr"}
	assign		$tmp3.a $const2 	%argrw{"wr"}
	assign		$tmp4.r $const4 	%argrw{"wr"}
	assign		$tmp4.a $const4 	%argrw{"wr"}
	functioncall	$const5 34 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:53
#       return color2(remap(c.r, inLow.r, inHigh.r, outLow.r, outHigh.r, doClamp),
	functioncall	$const5 22 	%line{53} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp5 in.r $tmp1.r 	%line{26} %argrw{"wrr"}
	sub		$tmp6 $tmp2.r $tmp1.r 	%argrw{"wrr"}
	div		___487_x $tmp5 $tmp6 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp7 $const1 $const3 	%line{27} %argrw{"wrr"}
	if		$tmp7 19 19 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 19 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp8 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp8 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp9 $tmp4.r $tmp3.r 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp10 $tmp9 ___487_x 	%argrw{"wrr"}
	add		out.r $tmp3.r $tmp10 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:54
#                     remap(c.a, inLow.a, inHigh.a, outLow.a, outHigh.a, doClamp));
	functioncall	$const5 34 	%line{54} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp11 in.a $tmp1.a 	%line{26} %argrw{"wrr"}
	sub		$tmp12 $tmp2.a $tmp1.a 	%argrw{"wrr"}
	div		___487_x $tmp11 $tmp12 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp13 $const1 $const3 	%line{27} %argrw{"wrr"}
	if		$tmp13 31 31 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 31 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp14 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp14 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp15 $tmp4.a $tmp3.a 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp16 $tmp15 ___487_x 	%argrw{"wrr"}
	add		out.a $tmp3.a $tmp16 	%argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_color2.osl:26
#     out = fgamma(out, gamma);
	functioncall	$const7 48 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_color2.osl"} %line{26} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:129
#     return fgamma(c, color2(a, a));
	assign		$tmp17.r gamma 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{129} %argrw{"wr"}
	assign		$tmp17.a gamma 	%argrw{"wr"}
	functioncall	$const7 48 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:124
#     return color2(fgamma(c.r, a.r), fgamma(c.a, a.a));
	functioncall	$const7 43 	%line{124} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:109
#     return sign(in) * pow(abs(in), g);
	sign		$tmp18 out.r 	%line{109} %argrw{"wr"}
	abs		$tmp20 out.r 	%argrw{"wr"}
	pow		$tmp19 $tmp20 $tmp17.r 	%argrw{"wrr"}
	mul		out.r $tmp18 $tmp19 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:124
#     return color2(fgamma(c.r, a.r), fgamma(c.a, a.a));
	functioncall	$const7 48 	%line{124} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:109
#     return sign(in) * pow(abs(in), g);
	sign		$tmp21 out.a 	%line{109} %argrw{"wr"}
	abs		$tmp23 out.a 	%argrw{"wr"}
	pow		$tmp22 $tmp23 $tmp17.a 	%argrw{"wrr"}
	mul		out.a $tmp21 $tmp22 	%argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_color2.osl:29
#     out = remap(out, 0, 1, outlow, outhigh, doclamp); 
	functioncall	$const5 82 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_remap_float_color2.osl"} %line{29} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:59
#     return remap(c, color2(inLow, inLow), color2(inHigh, inHigh), color2(outLow, outLow), color2(outHigh, outHigh), doClamp);
	assign		$tmp24.r $const2 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{59} %argrw{"wr"}
	assign		$tmp24.a $const2 	%argrw{"wr"}
	assign		$tmp25.r $const4 	%argrw{"wr"}
	assign		$tmp25.a $const4 	%argrw{"wr"}
	assign		$tmp26.r outlow 	%argrw{"wr"}
	assign		$tmp26.a outlow 	%argrw{"wr"}
	assign		$tmp27.r outhigh 	%argrw{"wr"}
	assign		$tmp27.a outhigh 	%argrw{"wr"}
	functioncall	$const5 82 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:53
#       return color2(remap(c.r, inLow.r, inHigh.r, outLow.r, outHigh.r, doClamp),
	functioncall	$const5 70 	%line{53} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp28 out.r $tmp24.r 	%line{26} %argrw{"wrr"}
	sub		$tmp29 $tmp25.r $tmp24.r 	%argrw{"wrr"}
	div		___487_x $tmp28 $tmp29 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp30 doclamp $const3 	%line{27} %argrw{"wrr"}
	if		$tmp30 67 67 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 67 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp31 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp31 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp32 $tmp27.r $tmp26.r 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp33 $tmp32 ___487_x 	%argrw{"wrr"}
	add		out.r $tmp26.r $tmp33 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:54
#                     remap(c.a, inLow.a, inHigh.a, outLow.a, outHigh.a, doClamp));
	functioncall	$const5 82 	%line{54} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:26
#       float x = (in - inLow)/(inHigh-inLow);
	sub		$tmp34 out.a $tmp24.a 	%line{26} %argrw{"wrr"}
	sub		$tmp35 $tmp25.a $tmp24.a 	%argrw{"wrr"}
	div		___487_x $tmp34 $tmp35 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:27
#       if (doClamp == 1) {
	eq		$tmp36 doclamp $const3 	%line{27} %argrw{"wrr"}
	if		$tmp36 79 79 	%argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:28
#            x = clamp(x, 0, 1);
	functioncall	$const6 79 	%line{28} %argrw{"r"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h:145
# float  clamp (float x, float minval, float maxval) { return max(min(x,maxval),minval); }
	min		$tmp37 ___487_x $const4 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\stdosl.h"} %line{145} %argrw{"wrr"}
	max		___487_x $tmp37 $const2 	%argrw{"wrr"}
# E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h:30
#       return outLow + (outHigh - outLow) * x;
	sub		$tmp38 $tmp27.a $tmp26.a 	%filename{"E:\db4\build\S\VS1464R\build\osl\src\external_osl\src\shaders\MaterialX\mx_funcs.h"} %line{30} %argrw{"wrr"}
	mul		$tmp39 $tmp38 ___487_x 	%argrw{"wrr"}
	add		out.a $tmp26.a $tmp39 	%argrw{"wrr"}
	end
