OpenShadingLanguage 1.00
# Compiled by oslc 1.9.9
# options: -q -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders/MaterialX -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -IE:/db4/build/S/VS1464R/build/osl/src/external_osl/src/shaders -o E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_disjointover_color2.oso
shader mx_disjointover_color2	%meta{string,help,"Color2 Take two color2 or two color4 inputs and use the built-in alpha                                channel(s) to control the compositing of the fg and bg inputs"} 
param	struct color2	fg			%read{2147483647,-1} %write{2147483647,-1} %struct{"color2"} %structfields{r,a} %structfieldtypes{"ff"} %structnfields{2}
param	float	fg.r	0		%read{4,9} %write{2147483647,-1} %mystruct{fg} %mystructfield{0}
param	float	fg.a	0		%read{1,6} %write{2147483647,-1} %mystruct{fg} %mystructfield{1}
param	struct color2	bg			%read{2147483647,-1} %write{2147483647,-1} %struct{"color2"} %structfields{r,a} %structfieldtypes{"ff"} %structnfields{2}
param	float	bg.r	0		%read{4,7} %write{2147483647,-1} %mystruct{bg} %mystructfield{0}
param	float	bg.a	0		%read{1,8} %write{2147483647,-1} %mystruct{bg} %mystructfield{1}
oparam	struct color2	out			%read{2147483647,-1} %write{2147483647,-1} %struct{"color2"} %structfields{r,a} %structfieldtypes{"ff"} %structnfields{2}
oparam	float	out.r	0		%read{2147483647,-1} %write{13,13} %mystruct{out} %mystructfield{0}
oparam	float	out.a	0		%read{2147483647,-1} %write{14,14} %mystruct{out} %mystructfield{1}
local	float	___591_summedAlpha	%read{2,11} %write{1,1}
local	float	___591_out.r	%read{5,13} %write{4,10} %mystruct{___591_out} %mystructfield{0}
local	float	___591_out.a	%read{12,14} %write{11,12} %mystruct{___591_out} %mystructfield{1}
const	string	$const1	"disjointover"		%read{0,0} %write{2147483647,-1}
const	int	$const2	1		%read{2,2} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
temp	float	$tmp2	%read{7,7} %write{6,6}
const	float	$const3	1		%read{6,11} %write{2147483647,-1}
temp	float	$tmp3	%read{8,8} %write{7,7}
temp	float	$tmp4	%read{9,9} %write{8,8}
code ___main___
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_disjointover_color2.osl:51
# {
	functioncall	$const1 15 	%filename{"E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_disjointover_color2.osl"} %line{51} %argrw{"r"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_disjointover_color2.osl:12
#     float summedAlpha = fg.a + bg.a;
	add		___591_summedAlpha fg.a bg.a 	%line{12} %argrw{"wrr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_disjointover_color2.osl:15
#     if (summedAlpha <= 1) {
	le		$tmp1 ___591_summedAlpha $const2 	%line{15} %argrw{"wrr"}
	if		$tmp1 6 11 	%argrw{"r"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_disjointover_color2.osl:16
#         out.r = fg.r + bg.r;
	add		___591_out.r fg.r bg.r 	%line{16} %argrw{"wrr"}
	assign		___591_out.r ___591_out.r 	%argrw{"wr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_disjointover_color2.osl:18
#         out.r = fg.r + ((bg.r * (1-fg.a)) / bg.a);
	sub		$tmp2 $const3 fg.a 	%line{18} %argrw{"wrr"}
	mul		$tmp3 bg.r $tmp2 	%argrw{"wrr"}
	div		$tmp4 $tmp3 bg.a 	%argrw{"wrr"}
	add		___591_out.r fg.r $tmp4 	%argrw{"wrr"}
	assign		___591_out.r ___591_out.r 	%argrw{"wr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_disjointover_color2.osl:21
#     out.a = min(summedAlpha, 1);
	min		___591_out.a ___591_summedAlpha $const3 	%line{21} %argrw{"wrr"}
	assign		___591_out.a ___591_out.a 	%argrw{"wr"}
# E:/db4/build/S/VS1464R/build/osl/src/external_osl-build/src/shaders/MaterialX/mx_disjointover_color2.osl:22
#     return out;
	assign		out.r ___591_out.r 	%line{22} %argrw{"wr"}
	assign		out.a ___591_out.a 	%argrw{"wr"}
	end
